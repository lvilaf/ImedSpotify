{"ast":null,"code":"import Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/spotify.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\n\nfunction BuscadorComponent_table_4_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵelement(2, \"img\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\")(13, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function BuscadorComponent_table_4_tr_16_Template_button_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const album_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r3.agregarAFavoritos(album_r2));\n    });\n    i0.ɵɵtext(14, \"\\u2605\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const album_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", album_r2.imagenalbumurl || (album_r2.images[0] == null ? null : album_r2.images[0].url), i0.ɵɵsanitizeUrl)(\"alt\", album_r2.nombreAlbum || album_r2.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r2.nombreartista || (album_r2.artists[0] == null ? null : album_r2.artists[0].name));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r2.nombreAlbum || album_r2.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r2.totalcanciones || album_r2.total_tracks);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(album_r2.anoalbum || i0.ɵɵpipeBind2(11, 6, album_r2.release_date, \"yyyy\"));\n  }\n}\n\nfunction BuscadorComponent_table_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\")(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"Imagen\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Nombre del Artista\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Nombre del \\u00C1lbum\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \"Cantidad de Canciones\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\");\n    i0.ɵɵtext(12, \"A\\u00F1o de Salida\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"th\");\n    i0.ɵɵtext(14, \"Favorito\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(15, \"tbody\");\n    i0.ɵɵtemplate(16, BuscadorComponent_table_4_tr_16_Template, 15, 9, \"tr\", 3);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(16);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.albums);\n  }\n}\n\nexport let BuscadorComponent = /*#__PURE__*/(() => {\n  class BuscadorComponent {\n    constructor(spotifyService) {\n      this.spotifyService = spotifyService;\n      this.query = '';\n      this.albums = [];\n    }\n\n    ngOnInit() {\n      this.obtenerFavoritos();\n    }\n\n    buscar() {\n      if (!this.query) return;\n      this.spotifyService.buscar(this.query).subscribe({\n        next: data => {\n          this.albums = data.albums.items;\n        },\n        error: error => {\n          console.error('Error al buscar en Spotify:', error);\n        }\n      });\n    }\n\n    obtenerFavoritos() {\n      this.spotifyService.getFavoritos().subscribe({\n        next: data => {\n          this.albums = data;\n        },\n        error: error => {\n          console.error('Error al obtener los álbumes favoritos:', error);\n        }\n      });\n    }\n\n    agregarAFavoritos(album) {\n      // Extraer solo el año\n      const anoalbum = album.release_date.substring(0, 4);\n      this.spotifyService.agregarFavorito({\n        nombreartista: album.artists[0].name,\n        nombreAlbum: album.name,\n        totalcanciones: album.total_tracks,\n        anoalbum: anoalbum,\n        imagenalbumurl: album.images[0]?.url,\n        idspotify: album.id\n      }).subscribe({\n        next: data => {\n          Swal.fire('Álbum agregado a favoritos', '', 'success');\n          this.obtenerFavoritos();\n        },\n        error: error => {\n          Swal.fire('Error al agregar el álbum a favoritos', error.message, 'error');\n        }\n      });\n    }\n\n  }\n\n  BuscadorComponent.ɵfac = function BuscadorComponent_Factory(t) {\n    return new (t || BuscadorComponent)(i0.ɵɵdirectiveInject(i1.SpotifyService));\n  };\n\n  BuscadorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BuscadorComponent,\n    selectors: [[\"app-buscador\"]],\n    decls: 5,\n    vars: 2,\n    consts: [[\"type\", \"text\", \"placeholder\", \"Buscar en Spotify\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [\"width\", \"50\", 3, \"src\", \"alt\"]],\n    template: function BuscadorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function BuscadorComponent_Template_input_ngModelChange_1_listener($event) {\n          return ctx.query = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function BuscadorComponent_Template_button_click_2_listener() {\n          return ctx.buscar();\n        });\n        i0.ɵɵtext(3, \"Buscar\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(4, BuscadorComponent_table_4_Template, 17, 1, \"table\", 2);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.query);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.albums.length > 0);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i2.DatePipe]\n  });\n  return BuscadorComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}